stages:
  - test
  - deployment
  - tag_release
  - monitoring

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"

.android_docker_image:
  image: cirrusci/flutter:1.22.2
  tags:
    - docker

test:debian:
  extends: .android_docker_image
  stage: test
  script:
    - source .${CI_COMMIT_REF_NAME}.env
    - flutter test --coverage
    - genhtml coverage/lcov.info --output=coverage
  artifacts:
    paths:
      - coverage/
    expire_in: 5 days

test:macos:
  stage: test
  script:
    - source .${CI_COMMIT_REF_NAME}.env
    - flutter test --coverage
    - genhtml coverage/lcov.info --output=coverage
  artifacts:
    paths:
      - coverage/
    expire_in: 5 days
  tags:
    - ios

####################### IOS ###############################

ipa:testflight:
  stage: deployment
  before_script:
    - source .${CI_COMMIT_REF_NAME}.env
    - cd ios/
    - gem install bundler
    - bundle install --path vendor/bundle
    - flutter pub get
  script:
    - bundle exec fastlane beta
  tags:
    - ios
  only:
    - dev
    - master

ipa:submit_to_review:
  stage: deployment
  when: manual
  allow_failure: false
  script:
    - bundle exec fastlane production
  only:
    - master

ipa:push_tags:
  stage: tag_release
  script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote add tag-origin https://syky27:${GITLAB_ACCESS_TOKEN}@${CI_REPO_PATH}
    - git push tag-origin --tags
  dependencies:
    - ipa:submit_to_review

ipa:sentry:dsyms:
  stage: monitoring
  script:
    - bundle exec fastlane monitoring
    - brew install getsentry/tools/sentry-cli
    - sentry-cli releases set-commits --auto $CI_PIPELINE_ID
  dependencies:
    - ipa:submit_to_review



####################### ANDROID ###############################

apk:alpha_track:
  stage: deployment
  extends: .android_docker_image
  before_script:
    - source .${CI_COMMIT_REF_NAME}.env
    # this will fetch the base64 encoded key store from our CI variables, decode it and place it underneath the path specified in build.gradle
    - echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > android/key.jks
    - cd android/
    - gem install bundler
    - bundle install
    - flutter pub get
  script:
    - flutter build apk --release --build-number=$CI_PIPELINE_ID --build-name=1.0.$CI_PIPELINE_ID
    - bundle exec fastlane beta
  artifacts:
    paths:
      - build/app/outputs/apk/release/app-release.apk
    expire_in: 1 day
  only:
    - dev

apk:prod_track:
  stage: deployment
  extends: .android_docker_image
  before_script:
    - source .${CI_COMMIT_REF_NAME}.env
    # this will fetch the base64 encoded key store from our CI variables, decode it and place it underneath the path specified in build.gradle
    - echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > android/key.jks
    - cd android/
    - flutter pub get
    - gem install bundler
    - bundle install

  script:
    - flutter build apk --release --build-number=$CI_PIPELINE_ID --build-name=1.0.$CI_PIPELINE_ID
    - bundle exec fastlane beta
  artifacts:
    paths:
      - build/app/outputs/apk/release/app-release.apk
    expire_in: 1 day
  only:
    - master